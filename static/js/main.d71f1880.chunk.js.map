{"version":3,"sources":["components/Header.js","components/Button.js","pages/art1.js","pages/art2.js","components/Blog.js","components/Blogs.js","components/RecentBlogsHeading.js","pages/home.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","to","title","description","defaultProps","isHomePage","ButtonStyle","borderRadius","margin","color","backgroundColor","fontSize","lineHeight","fontWeight","fontFamily","Button","style","onClick","className","text","art1","href","console","log","window","location","art2","Blog","blog","headLine","id","float","paddingRight","day","Blogs","blogList","map","RecentBlogsHeading","Home","useState","confirm","open","Main","exact","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d71f1880.chunk.js","sourcesContent":["import React from 'react'\r\nimport propTypes from 'prop-types'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// prop types makes react like typescript than vannila javascript\r\n\r\nconst Header = (props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<center>\r\n\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t<h1>\r\n\t\t\t\t\t\t{props.title}\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<h2>{props.description}</h2>\r\n\t\t\t</center>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nHeader.propTypes = {\r\n\ttitle: propTypes.string,\r\n\tdescription: propTypes.string,\r\n\tisHomePage: propTypes.bool\r\n}\r\n\r\nHeader.defaultProps = {\r\n\ttitle: \"ABJ Blogs\",\r\n\tdescription: \"Blogs about Tech and Software\",\r\n\tisHomePage: true\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Button = (props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<center>\r\n\t\t\t\t<button style={ButtonStyle} onClick={props.onClick} className={props.className} text={props.text} >\r\n\t\t\t\t\t{props.text}\r\n\t\t\t\t</button>\r\n\t\t\t</center>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nButton.propTypes = {\r\n\ttext: PropTypes.string,\r\n\tclassName: PropTypes.string,\r\n\tonClick: PropTypes.func.isRequired\r\n}\r\n\r\nconst ButtonStyle = {\r\n\tborderRadius: \"4px\",\r\n    margin: \"0 auto\",\r\n\tcolor: \"#282c34\",\r\n\tbackgroundColor: \"#61afef\",\r\n\tfontSize: \"14px\",\r\n    lineHeight: \"22px\",\r\n\tfontWeight: \"bolder\",\r\n    fontFamily: \"Roboto Mono\",\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react'\r\nimport Button from \"../components/Button\"\r\n\r\nconst art1 = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>A tribute to Kentaro Miura</h2>\r\n\r\n\t\t\t<pre>This blog is also available in <a href=\"https://youtu.be/0gHNucQqVNo\">video</a> format</pre>\r\n\r\n\t\t\tThis blog is to appreciate the legend of Kentaro Miura. It's been around a year, I started reading Berserk and I promise the effect it had on me is worth a lifetime. <br /><br />\r\n\t\t\tMiura is phenomenal, his art is majestic, the most superior I have ever seen and his storytelling skills are like magic. <br /><br />\r\n\t\t\tThis year, Miura left us suddenly for heavenly abode leaving all Otakus and literature lovers in as much pain as his signature character Guts. Miura has had a deeper impact on me than anyone else in my life. <br /><br />\r\n\t\t\tKentaro Miura is probably the greatest artist the world has ever seen. If you have read Berserk you would know the effect it has on you, transforming the entirety of your thought process and making you a far more intellectual, smart and empathetic person than you ever were. <br /><br />\r\n\t\t\tBeing an introvert throughout my life, I appreciate books and literature more than most and being an IITian boosts my understanding of them. I take pride in having lived in the era of Kentaro Miura and do believe that you would feel the same way once you have read even a bit of Berserk. <br /><br />\r\n\t\t\tMiura, you will be forever missed.\r\n\r\n\t\t\t<br/><br/>\r\n\t\t\t<Button\r\n\t\t\t\ttext=\"To HomePage\"\r\n\t\t\t\tclassName= \"toHome\"\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tconsole.log(\"tohome clicked\");\r\n\t\t\t\t\t\twindow.location.href = '/';\r\n\t\t\t\t\t}\r\n\t\t\t\t} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default art1","\r\nimport React from 'react'\r\nimport Button from \"../components/Button\"\r\n\r\nconst art2 = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>Internship at Salesforce</h2>\r\n\r\n\t\t\t\t<pre>This article has also been published at <a href=\"https://internphile.herokuapp.com/intern/Abhijay_Mitra\">link</a></pre>\r\n\r\n\t\t\t\t<h3>Why did you choose the company?</h3><br/>\r\n\r\n\t\t\t\tI liked the company.\r\n\r\n\t\t\t\t<h3>How many rounds and what rounds?</h3><br/>\r\n\r\n\t\t\t\tThere were a total of 5 rounds. 1 initial shortlisting coding test followed by 3 Technical Interview Rounds and 1 HR Round on the interview day.\r\n\r\n\t\t\t\t<h3>Coding round. How many rounds and the degree of difficulty? How much expertise do you need to clear the round?</h3><br/>\r\n\r\n\t\t\t\tThere were 3 problems in the shortlisting test. One of them (3rd one) was difficult for me. The other two was of medium difficulty. I would say, being rated &gt \"expert\" on Codeforces would be good enough to be able to solve 2 problems full. I was also able to solve the 3rd problem partially.\r\n\r\n\t\t\t\t<h3>CV : How important was your CV? Would you advise adding things which are not completely true in CV?</h3><br/>\r\n\r\n\t\t\t\tThe interviewer asked about my CV in the 2nd Tech round on the interview day. All of the questions about my CV were from my past internship. I would definitely advice against writing any false pieces of information on your CV.\r\n\r\n\t\t\t\t<h3>Duration of intern.</h3><br/>\r\n\r\n\t\t\t\t8 weeks\r\n\r\n\t\t\t\t<h3>Your point of contact during your internship?</h3><br/>\r\n\r\n\t\t\t\tMy manager was a KGP alumni himself, from my department. He always boosted my confidence and guided me throughout the internship. Also, my mentor was extremely helpful and he spoke to me on a regular basis. I did enjoy every moment with the team.\r\n\r\n\t\t\t\t<h3>Main project or objective during your intern.</h3><br/>\r\n\r\n\t\t\t\tI worked at Salesforce's Health Cloud. My project was to build an application that aimed to recognize, analyse and store data automatically, directly from medical voice conversations. During the internship, I developed a prototype app for healthcare registrars that mitigated their role in registering, updating or fetching patient details, using the NLP domain of automating storage of patient interactions.\r\n\r\n\t\t\t\t<h3>How was the work culture in the company?</h3><br/>\r\n\r\n\t\t\t\tSalesforce has one the best work cultures in the world. It is currently (2021) the 2nd best company in the world to work for according to Fortune (link - https://fortune.com/best-companies/2021/). I worked for about 3-5 hours a day on average. They provided everything I needed for the internship, along with awesome gifts and swags on regular intervals. The employees are always happy, motivated and ready to clear all your doubts and everyone in the company was just a ping on Slack away.\r\n\r\n\t\t\t\t<h3>Were Important tasks given to you or any input you gave to your project manager which proved to be useful?</h3><br/>\r\n\r\n\t\t\t\tMy project was a prototype of one of the breakthroughs Salesforce India's Health Cloud was planning for some time. The healthcare industry is moving towards ensuring easier access and exchange of medical information. My project was to create a very small MVP for the bigger picture application. We made key decisions while working on the project and I feel proud to have been a part of this mission.\r\n\r\n\t\t\t\t<h3>Anything you had to learn before the start of intern?</h3><br/>\r\n\r\n\t\t\t\tI often had conversations about the tech being used in the project with the team and had suggested some ways at some junctures. The team was always appreciative of my suggestions and provided valuable alternatives in case I was wrong.\r\n\r\n\t\t\t\t<h3>Overall CDC experience? Any advice for improving the process down the line?</h3><br/>\r\n\r\n\t\t\t\tIt was amazing for me. I think the process is well structured and while most colleges have much lesser companies hiring from them, CDC plays a good role in KGP.\r\n\r\n\t\t\t<br/><br/>\r\n\t\t\t<Button\r\n\t\t\t\ttext=\"To HomePage\"\r\n\t\t\t\tclassName= \"toHome\"\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tconsole.log(\"tohome clicked\");\r\n\t\t\t\t\t\twindow.location.href = '/';\r\n\t\t\t\t\t}\r\n\t\t\t\t} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default art2\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Blog = ({ blog }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<p>\r\n\t\t\t\t{blog.headLine}: <Link to={\"/abj-blogs/blog\" + blog.id}>\r\n\t\t\t\t\tlink\r\n\t\t\t\t</Link>\r\n\t\t\t\t<span style={{ float: \"right\", paddingRight: \"20px\" }}>\r\n\t\t\t\t\tcreated: {blog.day}\r\n\t\t\t\t</span>\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nBlog.propTypes = {\r\n\tid: PropTypes.number,\r\n\theadLine: PropTypes.string,\r\n\tlink: PropTypes.string,\r\n\tcontent: PropTypes.string,\r\n\tday: PropTypes.string,\r\n}\r\n\r\nexport default Blog\r\n","import Blog from './Blog'\r\n\r\nconst Blogs = ({ blogList }) => {\r\n\r\n\t// A PROBLEM WITH STATES IS STATE IS IMMUTABLE\r\n\t// EACH TYPE WE ADD A BLOG, THE STATE HAS TO BE\r\n\t// CHANGED\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{blogList.map((blog) => (\r\n\t\t\t\t<Blog key={blog.id} blog = {blog} />\r\n\t\t\t))}\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Blogs\r\n","import React from 'react'\r\n\r\nconst RecentBlogsHeading = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>\r\n\t\t\t\tSome of my recent blogs are:\r\n\t\t\t</h2>\r\n\t\t\t<br />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default RecentBlogsHeading\r\n","import React from 'react'\r\nimport Button from \"../components/Button\"\r\nimport Blogs from \"../components/Blogs\"\r\nimport RecentBlogsHeading from \"../components/RecentBlogsHeading.js\"\r\nimport {useState} from 'react'\r\n\r\n// THE MAIN IDEA IS EACH BLOG SHOULD HAVE A LINK.\r\n// SOME MAY BE EXTERNAL TO OUR SITE.\r\n\r\nconst Home = () => {\r\n\tconst [blog, /* setBlogs */] = useState(\r\n\t\t[\r\n\t\t\t{\r\n\t\t\t\tid: 2,\r\n\t\t\t\theadLine: \"Internship at Salesforce\",\r\n\t\t\t\tday: \"Aug 20 2021\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid: 1,\r\n\t\t\t\theadLine: \"A tribute to Kentaro Miura\",\r\n\t\t\t\tday: \"Jul 27 2021\",\r\n\t\t\t}\r\n\t\t]\r\n\t)\r\n\treturn (\r\n\t\t<div className=\"Home\">\r\n\t\t\t{/* BLOGS MAY HAVE BACK TO THIS ARTICLE INSTEAD */}\r\n\t\t\t<RecentBlogsHeading />\r\n\t\t\t<Blogs blogList={blog} />\r\n\t\t\t<Button\r\n\t\t\t\ttext=\"To Portfolio\"\r\n\t\t\t\tclassName= \"toPortfolio\"\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tconsole.log(\"ABJ clicked\");\r\n\t\t\t\t\t\tif (window.confirm(\"You will be redirected to ABJ public portfolio. Do you want to leave this page?\"))\r\n\t\t\t\t\t\twindow.open(\"https://abhj.github.io/public-portfolio/\");\r\n\t\t\t\t\t}\r\n\t\t\t\t} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport art1 from './pages/art1';\r\nimport art2 from './pages/art2';\r\n// import art3 from './pages/art3';\r\nimport Home from './pages/home';\r\n\r\nconst Main = () => {\r\n  return (\r\n    <Switch> {/* The Switch decides which component to show based on the current URL.*/}\r\n      <Route exact path='/abj-blogs/' component={Home}></Route>\r\n      <Route exact path='/abj-blogs/blog1' component={art1}></Route>\r\n      <Route exact path='/abj-blogs/blog2' component={art2}></Route>\r\n      {/* <Route exact path='/abj-blogs/blog3' component={art3}></Route> */}\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react'\r\nimport Header from \"./components/Header\"\r\nimport Main from './Main'\r\n\r\n// THE MAIN IDEA IS EACH BLOG SHOULD HAVE A LINK.\r\n// SOME MAY BE EXTERNAL TO OUR SITE.\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<Header />\r\n\t\t\t<Main />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n  , document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}